<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <!-- Level的级别，由高到低 -->
  <!-- None > Fatal > ERROR > WARN > DEBUG > INFO > ALL-->
  <!-- 解释：如果level是ERROR，则在cs文件里面调用log4net的info()方法，则不会写入到日志文件中-->
  <log4net debug="false" update="Merge" threshold="ALL">
    <!--root,所有的logger都继承自root-->
    <root >
      <level value="ALL" />
      <appender-ref ref="AdoNetAppender"/>
    </root>
    <!--错误日志类-->
    <logger name="logerror" additivity="false">
      <!--日志类的名字-->
      <level value="ERROR" />
      <!--定义记录的日志级别-->
      <appender-ref ref="ErrorAppender" />
      <!--这里你是可以添加多个appender的，从而输出到多个介质-->
      <!--记录到哪个介质中去-->
    </logger>
    <!--信息日志类-->
    <logger name="loginfo">
      <level value="INFO" />
      <appender-ref ref="InfoAppender" />
    </logger>
    <!--信息日志类 数据库-->
    <logger name="loginfoDb">
      <level value="INFO" />
      <level value="ERROR" />
      <appender-ref ref="AdoNetAppender"/>
    </logger>
    <!--错误日志附加介质  文本文件-->
    <appender name="ErrorAppender" type="log4net.Appender.RollingFileAppender">
      <threshold value="Error"/>
      <!-- name属性指定其名称,type则是log4net.Appender命名空间的一个类的名称,意思是,指定使用哪种介质-->
      <param name="File" value="Log\\LogError\\" />
      <!--日志输出到exe程序这个相对目录下-->
      <param name="AppendToFile" value="true" />
      <!--输出的日志不会覆盖以前的信息   是否追加到文件-->
      <param name="MaxSizeRollBackups" value="100" />
      <!--备份文件的个数-->
      <param name="MaxFileSize" value="10240" />
      <!--当个日志文件的最大大小-->
      <param name="StaticLogFileName" value="false" />
      <!--是否使用静态文件名  日志文件名，是否固定不变 -->
      <param name="DatePattern" value="yyyyMMdd&quot;.txt&quot;" />
      <!--日志文件名  生成格式；每天生成一个日志-->
      <param name="RollingStyle" value="Date" />
      <!--文件创建的方式，这里是以Date方式创建-->

      <!--错误日志布局-->
      <layout type="log4net.Layout.PatternLayout">

        <param name="ConversionPattern" value="
               %n &#xA;====================================================&#xA;
               %n &#xA;======================开始==========================&#xA;
               %n【异常时间】%d
               %n【日志级别】%-5level
               %n【记录时间】%date
               %n【线程编号】[%thread]
               %n【执行时间】[%r]毫秒
               %n【出错文件】%F
               %n【异 常 类】%c 
               %n【出错行号】%L
               %n【出错的类】%logger 属性[%property{NDC}]
               %n【错误描述】%message
               %n【错误详情】%newline"/>
        <!--<param name="Header" value="&#xA;========header============&#xA;"/>-->
        <!--<param name="Header" value="&#xA;========日志文件Header========xA;"/>-->

      </layout>
    </appender>
    <!--信息日志附加介质  文本文件-->
    <appender name="InfoAppender" type="log4net.Appender.RollingFileAppender">
      <threshold value="Info"/>
      <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!--使用Unicode编码-->
      <Encoding value="UTF-8" />
      <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
      <param name="MaxSizeRollBackups" value="10" />
      <param name="File" value="Log\\LogInfo\\" />
      <param name="AppendToFile" value="true" />

      <!--是否只写到一个文件中-->
      <param name="StaticLogFileName" value="false" />
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Date" />
      <!--按日期产生文件的文件名格式-->
      <param name="DatePattern" value="yyyyMMdd&quot;.htm&quot;" />
      <!--此处按日期产生文件夹，文件名固定。注意&quot; 的位置<param name="DatePattern" value="yyyy-MM-dd/&quot;ReflectionLayout.log&quot;"  />
      这是按日期产生文件夹，并在文件名前也加上日期 <param name="DatePattern" value="yyyyMMdd/yyyyMMdd&quot;-TimerServer.log&quot;"  />
      这是先按日期产生文件夹，再形成下一级固定的文件夹<param name="DatePattern" value="yyyyMMdd/&quot;TimerServer/TimerServer.log&quot;"  />-->
      <!--每个文件的大小。只在混合方式与文件大小方式下使用。超出大小后在所有文件名后自动增加正整数重新命名，数字最大的最早写入。
      可用的单位:KB|MB|GB。不要使用小数,否则会一直写入当前日志-->
      <param name="maximumFileSize" value="500KB" />
      <param name="MaxFileSize" value="10240" />
      <!--计数类型为1，2，3…-->
      <!--<param name="CountDirection" value="1"/>-->
      <!--信息日志布局-->
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="&lt;HR COLOR=blue&gt;%n日志时间：%d [%t] &lt;BR&gt;%n日志级别：%-5p &lt;BR&gt;%n日 志 类：%c [%x] &lt;BR&gt;%n%m &lt;BR&gt;%n &lt;HR Size=1&gt;"  />
      </layout>
    </appender>
    <!--信息日志附加介质  数据库文件-->
    <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="1" />
      <!--或者写成<param name="BufferSize" value="10" />-->
      <threshold value="Info"/>
      <!--log when >= Fatal  然后你就会发现很多日志都无法记录了 -->
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <connectionString value="data source=DESKTOP-T2M881V\MSQL;initial catalog=testdb;integrated security=false;persist security info=True;User ID=sa;Password=root" />
      <commandText value="INSERT INTO Log ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="2000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>
      <!--过滤器-->
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="DEBUG" />
        <param name="LevelMax" value="WARN" />
      </filter>
    </appender>
  </log4net>
</configuration>
